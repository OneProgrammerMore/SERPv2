version: "3.7"

services:
  # GATEWAY FOR PROJECT
  serp-gateway:
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    container_name: serp-gateway
    volumes:
      - ./docker/gateway/nginx/logs:/var/log/nginx
      - ./docker/gateway/nginx/default.conf:/etc/nginx/conf.d/default.conf
    user: "1234:1234"
    networks:
      - serp-gateway-network
      - gateway-network
    restart: always
  # FAST API BACKEND
  serp-fastapi:
    build: 
      context: ./serp-fastapi
      dockerfile: DockerfileDeploy
    container_name: serp-fastapi
    environment:
      - DEBUG=1
      - API_URL_CORS=http://192.168.1.130
      - PORT=5001
      - URIS_PREFIX=/projects/serp
    depends_on:
      serp-db:
        condition: service_healthy
    command: python main.py runserver
    networks:
      - serp-database-network
      - serp-gateway-network
  # DATABASE
  serp-db:
    image: postgres:15.10-bookworm
    container_name: serp-db
    volumes:
      - ./docker/serp-postgresql:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-serp_db}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - serp-database-network
  # REACT NGINX SERVER
  serp-react-nginx:
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    container_name: serp-react-nginx
    user: "1234:1234"
    volumes:
      - ./serp-react/build:/var/www/html
      - ./docker/serp-react/nginx/logs:/var/log/nginx
      - ./docker/serp-react/nginx/default.conf:/etc/nginx/conf.d/default.conf
    restart: always
    networks:
      - serp-gateway-network
    
networks:
  serp-database-network:
    driver: bridge
  serp-gateway-network:
    driver: bridge
  gateway-network:
    name: gateway-network
    driver: bridge
    external: true
